@using Microsoft.EntityFrameworkCore.Internal
@model BtcTransmuter.Extension.NBXplorer.Actions.SendTransaction.SendTransactionController.SendTransactionViewModel
@{
    ViewData["Title"] = "Edit Send Transaction Action";
}

<h2>@ViewData["Title"]</h2>

<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="ExternalServiceId" class="control-label"></label>
        <select asp-for="ExternalServiceId" asp-items="Model.ExternalServices" class="form-control"></select>
        <span asp-validation-for="ExternalServiceId" class="text-danger"></span>
        @if (!Model.ExternalServices.Items.Any())
        {
            <span class="text-danger">There are no NBXplorer Wallet external services available to create this action. <a asp-action="CreateExternalService" asp-controller="ExternalServices">Create one</a></span>
        }
    </div>

    <div class="list-group mb-2">
        <div class="list-group-item ">
            <h5 class="mb-1">Transaction outputs</h5>
        </div>
        @for (var index = 0; index < Model.Outputs.Count; index++)
        {
            <div class="list-group-item justify-content-between align-items-center">
                <div>
                    <div class="form-group">
                        <label asp-for="Outputs[index].Amount" class="control-label"></label>
                        <input asp-for="Outputs[index].Amount" class="form-control"/>
                        <span asp-validation-for="Outputs[index].Amount" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Outputs[index].DestinationAddress" class="control-label"></label>
                        <input asp-for="Outputs[index].DestinationAddress" class="form-control"/>
                        <span asp-validation-for="Outputs[index].DestinationAddress" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Outputs[index].SubtractFeesFromOutput" class="control-label"></label>
                        <input type="checkbox" asp-for="Outputs[index].SubtractFeesFromOutput" class="form-check" />
                        <span asp-validation-for="Outputs[index].SubtractFeesFromOutput" class="text-danger"></span>
                    </div>
                </div>
                <div>
                    <button type="submit" name="action" value="@($"remove-output:{index}")" class="btn btn-danger">Remove</button>
                </div>
            </div>
        }
        <div class="list-group-item ">
            <button type="submit" name="action" value="add-output" class="btn btn-secondary">Add</button>
        </div>
    </div>

    <input type="hidden" asp-for="RecipeId"/>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-action="EditRecipe" asp-controller="Recipes" class="btn btn-secondary" asp-route-id="@Model.RecipeId">Back to recipe</a>
    </div>
</form>
@await Component.InvokeAsync("RecipeActionFooter", new
{
    recipeId = @Model.RecipeId,
    recipeActionIdInGroupBeforeThisOne = @Model.RecipeActionIdInGroupBeforeThisOne
})