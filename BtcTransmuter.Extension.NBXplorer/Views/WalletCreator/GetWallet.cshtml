@using BtcTransmuter.Extension.NBXplorer.Models
@using NBitcoin
@using Newtonsoft.Json.Linq
@model BtcTransmuter.Extension.NBXplorer.Controllers.WalletCreatorController.GetWalletViewModel
@inject BtcTransmuter.Extension.NBXplorer.Services.DerivationSchemeParser derivationSchemeParser
@inject BtcTransmuter.Extension.NBXplorer.Services.DerivationStrategyFactoryProvider derivationStrategyFactoryProvider
@{

    ViewData["Title"] = $"Generate/View {Model.Network.Name} Wallet";
    var mnemonic = new Mnemonic(Model.Mnemonic);
    var extKey = mnemonic.DeriveExtKey();
    var wif = extKey.GetWif(Model.Network);
    var privateKey = extKey.PrivateKey;
    var secret = privateKey.GetBitcoinSecret(Model.Network);
    var address = secret.GetAddress(ScriptPubKeyType.Legacy);
    var segwitAddress =  secret.GetAddress(ScriptPubKeyType.Segwit);
    var p2shAddress =  secret.GetAddress(ScriptPubKeyType.SegwitP2SH);
    var extPubKey = extKey.Neuter().ToString(Model.Network);
    var legacy = derivationSchemeParser.Parse(derivationStrategyFactoryProvider.GetDerivationStrategyFactory(Model.CryptoCode), $"{extPubKey}-[legacy]");
    var segwit = derivationSchemeParser.Parse(derivationStrategyFactoryProvider.GetDerivationStrategyFactory(Model.CryptoCode), $"{extPubKey}");
    var p2sh = derivationSchemeParser.Parse(derivationStrategyFactoryProvider.GetDerivationStrategyFactory(Model.CryptoCode), $"{extPubKey}-[p2sh]");


    Dictionary<string, string> GenerateAddresses(NBXplorer.DerivationStrategy.DerivationStrategyBase derivation)
    {
        var result = new Dictionary<string, string>();
        var deposit = new NBXplorer.KeyPathTemplates(null).GetKeyPathTemplate(NBXplorer.DerivationStrategy.DerivationFeature.Deposit);

        var line = derivation.GetLineFor(deposit);
        for (int i = 0; i < 20; i++)
        {
            result.Add(deposit.GetKeyPath((uint)i).ToString(), line.Derive((uint)i).ScriptPubKey.GetDestinationAddress(Model.Network).ToString());
        }
        return result;
    }
}

<div class="d-flex justify-content-between">


    <h2>@ViewData["Title"]</h2>
    <div>
        @foreach (var cryptoCode in Model.CryptoCodes)
        {
            <a asp-action="GetWallet" asp-route-cryptoCode="@cryptoCode" asp-route-mnemonic="" class="btn btn-secondary btn-sm mr-2">Generate new @cryptoCode wallet</a>
        }
    </div>
</div>


<div class="card">
    <div class="card-body">
        <div class="form-group">
            <label class="control-label">Mnemonic Seed</label>
            <input readonly class="form-control" value="@Model.Mnemonic"/>
        </div>
        <div class="form-group">
            <label class="control-label">Private Key</label>
            <input readonly class="form-control" value="@privateKey.ToString(Model.Network)"/>
        </div>
           <div class="form-group">
                <label class="control-label">Wallet Import Format(WIF)</label>
                <input readonly class="form-control" value="@wif"/>
            </div>
            <div class="form-group">
                <label class="control-label">Extended Public key</label>
                <input readonly class="form-control" value="@extPubKey"/>
            </div>       
            <div class="card">
	        <nav>
		        <div class="nav nav-tabs nav-fill" id="nav-tab" role="tablist">
			        <a class="nav-item nav-link" href="#tab-hd-legacy" id="nav-hd-legacy" data-toggle="tab" h role="tab" >Legacy</a>
				    <a class="nav-item nav-link active" href="#tab-hd-p2sh"  id="nav-hd-p2sh" data-toggle="tab" role="tab" >Segwit P2SH</a>
				    <a class="nav-item nav-link" href="#tab-hd-segwit" id="nav-hd-segwit" data-toggle="tab"  role="tab" >Native Sewgit</a>
				    <a class="nav-item nav-link" href="#tab-singular"  id="nav-singular" data-toggle="tab" role="tab" >Singular Addresses</a>
			    </div>
		    </nav>
		    <div class="tab-content py-3 px-3 px-sm-0" >
		        <div class="tab-pane p-2" id="tab-hd-legacy" role="tabpanel" id="tab-hd-legacy">	
                    <div class="form-group">
                        <label class="control-label">BTCPay / BTCTransmuter compatible xpub for legacy addresses</label>
                        <input readonly class="form-control" value="@legacy.ToString()"/>
                    </div>
                    <div class="form-group">
                        <table class="table table-sm table-responsive-md">
                            <thead>
                                <tr>
                                    <th>Key path</th>
                                    <th>Address</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var sample in GenerateAddresses(legacy))
                                {
                                    <tr>
                                        <td>@sample.Key</td>
                                        <td>@sample.Value</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>  
                <div class="tab-pane p-2 show active " id="tab-hd-p2sh" role="tabpanel">
                    <div class="form-group">
                        <label class="control-label">BTCPay / BTCTransmuter compatible xpub for p2sh addresses</label>
                        <input readonly class="form-control" value="@p2sh.ToString()" />
                    </div>
                    <div class="form-group">
                        <table class="table table-sm table-responsive-md">
                            <thead>
                                <tr>
                                    <th>Key path</th>
                                    <th>Address</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var sample in GenerateAddresses(p2sh))
                                {
                                    <tr>
                                        <td>@sample.Key</td>
                                        <td>@sample.Value</td>
                                    </tr>
                                }
                            </tbody>
                         </table>
                    </div>
                </div>
                <div class="tab-pane p-2" id="tab-hd-segwit" role="tabpanel">
                    <div class="form-group">
                        <label class="control-label">BTCPay / BTCTransmuter compatible xpub for segwit addresses</label>
                        <input readonly class="form-control" value="@segwit.ToString()" />
                    </div>
                    <div class="form-group">
                        <table class="table table-sm table-responsive-md">
                            <thead>
                                <tr>
                                    <th>Key path</th>
                                    <th>Address</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var sample in GenerateAddresses(segwit))
                                {
                                    <tr>
                                        <td>@sample.Key</td>
                                        <td>@sample.Value</td>
                                    </tr>
                                }
                            </tbody>
                         </table>
                    </div>
                </div>
	            <div class="tab-pane p-2" id="tab-singular" role="tabpanel" >
		            <div class="form-group">
                        <label class="control-label">Root Legacy Address</label>
                        <input readonly class="form-control" value="@address"/>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Root Segwit Address</label>
                        <input readonly class="form-control" value="@segwitAddress"/>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Root Segwit-P2SH Address</label>
                        <input readonly class="form-control" value="@p2shAddress"/>
                    </div>
	            </div>
	        </div>
        </div>
    </div>
</div>