@model BtcTransmuter.Controllers.EditRecipeViewModel


@{
    ViewData["Title"] = "Edit Recipe";
}

<div class="row">
    <div class="col-lg-12 text-center">
        <partial name="_StatusMessage" model="@Model.StatusMessage"/>
    </div>
</div>
<h2>@ViewData["Title"]</h2>

<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Enabled" class="control-label"></label>
        <input type="checkbox" asp-for="Enabled" class="form-check"></input>
        <span asp-validation-for="Enabled" class="text-danger"></span>
    </div>

    <ul>
        @if (Model.Trigger != null)
        {
            <li>
                @await Component.InvokeAsync("ViewRecipeTrigger", Model.Trigger);
            </li>
        }
        else
        {
            <li>
                <a asp-action="EditRecipeTrigger" asp-controller="RecipeTriggers">Add Trigger</a>
            </li>
        }

        @foreach (var action in Model.Actions)
        {
            <li>
                @await Component.InvokeAsync("ViewRecipeAction", action);
            </li>
        }
        <li>
            <a asp-action="EditRecipeAction" asp-controller="RecipeActions">Add Action</a>
        </li>
    </ul>


    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="GetRecipes" class="btn btn-secondary">Back to list</a>
</form>