@model EditRecipeViewModel
@{
    ViewData["Title"] = "Edit Recipe";
}

<div class="row">
    <div class="col-lg-12 text-center">
        <partial name="_StatusMessage" model="@Model.StatusMessage"/>
    </div>
</div>
<h2>@ViewData["Title"]</h2>

<form method="post">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Enabled" class="control-label"></label>
        <input type="checkbox" asp-for="Enabled" class="form-check"></input>
        <span asp-validation-for="Enabled" class="text-danger"></span>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item">
            <h4>Trigger</h4>
            @if (Model.Trigger == null)
            {
                <span>No trigger set yet</span>

                <a asp-action="EditRecipeTrigger" asp-controller="RecipeTriggers" asp-route-id="@Model.Id">Add</a>
            }
            else
            {
                <div class="d-flex justify-content-between align-items-center">
                    @await Component.InvokeAsync("ViewRecipeTrigger", Model.Trigger)
                    <div>
                        <a asp-action="EditRecipeTrigger" asp-controller="RecipeTriggers"
                           asp-route-id="@Model.Trigger.RecipeId"
                           asp-route-recipeTriggerId="@Model.Trigger.Id">
                            Edit
                        </a>
                        <a asp-action="RemoveRecipeTrigger" asp-controller="RecipeTriggers"
                           asp-route-id="@Model.Trigger.RecipeId"
                           asp-route-recipeTriggerId="@Model.Trigger.Id">
                            Remove
                        </a>
                    </div>
                </div>
            }
        </li>
        <li class="list-group-item px-0">
            <h4>Actions</h4>
            <ul class="list-group list-group-flush ">
                @foreach (var action in Model.Actions)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @await Component.InvokeAsync("ViewRecipeAction", action)
                        <div>
                            <a asp-action="EditRecipeAction" asp-controller="RecipeActions" asp-route-id="@Model.Id" asp-route-recipeActionId="@action.Id">Edit</a>
                            <a asp-action="RemoveRecipeAction" asp-controller="RecipeActions" asp-route-id="@Model.Id" asp-route-recipeActionId="@action.Id">Remove</a>

                        </div>
                    </li>
                    <li class="list-group-item">
                        <a asp-action="EditRecipeAction" asp-controller="RecipeActions" asp-route-id="@Model.Id">Add</a>
                    </li>
                }
                @if (!Model.Actions.Any())
                {
                    <li class="list-group-item border-top-0">
                        No Actions

                        <a asp-action="EditRecipeAction" asp-controller="RecipeActions" asp-route-id="@Model.Id">Add</a>
                    </li>
                }
            </ul>
        </li>
    </ul>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-action="RemoveRecipe" asp-route-id="@Model.Id" class="btn btn-danger">Remove</a>
        <a asp-action="GetRecipes" class="btn btn-secondary">Back to list</a>
    </div>
</form>