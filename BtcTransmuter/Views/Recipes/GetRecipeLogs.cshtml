@using BtcTransmuter.Helpers
@model GetRecipeLogsViewModel

@{
    ViewData["Title"] = $"{Model.Name} Recipe Logs";

    string invoiceVal(Dictionary<string, object> dict, string key)
    {
        return ((Dictionary<string, object>)dict["Invoice"])[key].ToString();
    }
}

<h1>@ViewData["Title"]</h1>
@{


}
<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                Time and Action
            </th>
            <th>
                Result
            </th>
            <th>
                Trigger
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.RecipeInvocations)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Timestamp)

                    @await Component.InvokeAsync("ViewRecipeAction", new
                    {
                        recipeAction = item.RecipeAction
                    })
                </td>

                <td>
                    @if (item.RecipeAction.ActionId == "PlaceOrder")
                    {
                        <span>@item.ActionResult</span>
                    }
                    else
                    {
                        <partial name="PosData" model="@PosDataParser.ParsePosData(item.ActionResult)" />
                    }
                </td>

                <td>
                    @{
                        var trigger = item.Recipe.RecipeTrigger;
                        var triggerData = @PosDataParser.ParsePosData(item.TriggerDataJson);
                    }

                    @if (trigger.TriggerId != null &&
                      trigger.TriggerId.Contains(".InvoiceStatusChangedTrigger"))
                    {
                        <div>Invoice Id: @invoiceVal(triggerData, "Id")</div>
                        <div>
                            Amount: @invoiceVal(triggerData, "price") @invoiceVal(triggerData, "currency")
                        </div>
                        <div>
                            BtcPaid: @invoiceVal(triggerData, "BtcPrice")
                        </div>
                    }
                    else
                    {
                        <div style="width: 100%; max-width: 500px; max-height: 250px; overflow:scroll">
                            <partial name="PosData" model="triggerData" />
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>